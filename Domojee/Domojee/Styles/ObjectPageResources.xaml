<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="using:Domojee.Converters"
                    xmlns:ctl="using:Domojee.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:selector="using:Domojee.Selectors"
                    xmlns:ColorPicker="using:ColorPicker"
                    xmlns:Converters="using:Template10.Converters"
                    mc:Ignorable="d">
    <converter:StateToFontAwesomeConverter x:Key="StateToFontAwesomeConverter"/>
    <FontFamily x:Key="FontAwesome">/Assets/Fonts/FontAwesome.ttf#FontAwesome</FontFamily>
    <converter:EqLogicCmdInfoByIdConverter x:Key="EqLogicCmdInfoByIdConverter"/>
    <Converters:ChangeTypeConverter x:Key="ChangeTypeConverter"/>
    <converter:EqLogicStateConverter x:Key="EqLogicStateConverter" />
    <converter:UpdatingConverter x:Key="UpdatingConverter" />
    <converter:EqLogicNotUpdatingConverter x:Key="EqLogicNotUpdatingConverter" />
    <converter:EqLogicState2BrushConverter x:Key="EqLogicState2BrushConverter" />
    <converter:EqLogicCmdInfoByNameConverter x:Key="EqLogicCmdInfoByNameConverter" />
    <converter:EqLogicCmdInfoByTypeConverter x:Key="EqLogicCmdInfoByTypeConverter" />
    <converter:ValueConverterGroup x:Key="GroupState2BrushConverter">
        <converter:EqLogicCmdInfoByTypeConverter />
        <converter:EqLogicState2BrushConverter />
    </converter:ValueConverterGroup>
    <converter:UpdatingConverter x:Key="UpdatingVisibilityConverter" />

       <DataTemplate x:Key="ObjectHeaderTemplate">
        <TextBlock Text="{Binding name}" />
    </DataTemplate>

    <DataTemplate x:Key="ObjectPageTemplate">
                    <ctl:VariableSizedGridView x:Name="eqlogicview"
				ItemTemplateSelector="{StaticResource EqLogicTemplateSelector}"
				ItemsSource="{Binding eqLogics}"
				SelectionMode="None">
                        <ctl:VariableSizedGridView.ItemContainerStyle>
                            <Style TargetType="GridViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                        </ctl:VariableSizedGridView.ItemContainerStyle>
                        <ctl:VariableSizedGridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VariableSizedWrapGrid 
							ItemWidth="450"
							MaximumRowsOrColumns="5"
							Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ctl:VariableSizedGridView.ItemsPanel>
                    </ctl:VariableSizedGridView>
    </DataTemplate>
    <DataTemplate x:Key="EqLogicTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <ctl:VariableSizedGridView x:Name="cmdview"
				Background="#FF5EA2D1"
				IsItemClickEnabled="False"
				ItemTemplateSelector="{StaticResource CmdTemplateSelector}"
				ItemsSource="{Binding cmds}"
				Padding="15"
				SelectionMode="None">
                <ctl:VariableSizedGridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    </Style>
                </ctl:VariableSizedGridView.ItemContainerStyle>
                <ctl:VariableSizedGridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VariableSizedWrapGrid 
							ItemWidth="150"
							MaximumRowsOrColumns="5"
							Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ctl:VariableSizedGridView.ItemsPanel>
                <!--ProgressRing x:Name="PART_Updating"
					IsActive="false"
					RelativePanel.AlignRightWithPanel="True"
					RelativePanel.AlignTopWithPanel="True"
					Visibility="{Binding Updating, Converter={StaticResource UpdatingConverter}}"  /-->
            </ctl:VariableSizedGridView>
        </RelativePanel>
    </DataTemplate>

    <!--  Template pour ZWave  -->
    <DataTemplate x:Key="ZWaveEqLogicTemplate">
        <RelativePanel Background="LawnGreen">
            <TextBlock x:Name="txtType"
				Margin="5"
				FontSize="8"
				RelativePanel.AlignRightWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Text="openzwave" />
            <TextBlock x:Name="txtName"
				FontSize="18"
				FontWeight="Bold"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="txtType"
				Text="{Binding name, FallbackValue=Name}" />
            <StackPanel x:Name="stkTools"
				Orientation="Horizontal"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="txtName">
                <Button x:Name="btnON"
					Margin="5,0"
					Click="btnON_Click"
					FontFamily="Segoe MDL2 Assets"
					Tag="{Binding id}"
					Visibility="{Binding OnVisibility, Converter={StaticResource UpdatingConverter}}">
                    <Grid Width="20" Height="20">
                        <ProgressRing HorizontalAlignment="Center"
							VerticalAlignment="Center"
							IsActive="True"
							Visibility="{Binding Updating, Converter={StaticResource UpdatingConverter}}" />
                        <TextBlock HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Foreground="{Binding State, Converter={StaticResource EqLogicState2BrushConverter}}"
							Text="{Binding State, Converter={StaticResource EqLogicStateConverter}}"
							Visibility="{Binding Updating, Converter={StaticResource EqLogicNotUpdatingConverter}}" />
                    </Grid>
                </Button>
                <StackPanel Width="100" Margin="0,0,5,0">
                    <TextBlock HorizontalAlignment="Center"
						FontSize="12"
						Text="Puissance" />
                    <TextBlock HorizontalAlignment="Center"
						FontSize="10"
						Text="{Binding Puissance, FallbackValue=N/A}" />
                </StackPanel>
                <StackPanel Width="100" Margin="0,0,5,0">
                    <TextBlock HorizontalAlignment="Center"
						FontSize="12"
						Text="Consommation" />
                    <TextBlock HorizontalAlignment="Center"
						FontSize="10"
						Text="{Binding Consommation, FallbackValue=N/A}" />
                </StackPanel>
            </StackPanel>
        </RelativePanel>
    </DataTemplate>

    <!--  Template pour Sonos  -->
    <DataTemplate x:Key="SonosEqLogicTemplate">
        <RelativePanel Background="#2BC6FC"
			d:DesignHeight="300"
			d:DesignWidth="300">
            <ProgressRing x:Name="PART_Updating"
				IsActive="True"
				RelativePanel.AlignRightWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Visibility="{Binding Updating, Converter={StaticResource UpdatingConverter}}" />
            <Image Source="{Binding cmds, ConverterParameter=Image, Converter={StaticResource EqLogicCmdInfoByNameConverter}}" />
            <TextBlock x:Name="PART_Pause"
				FontSize="80"
				FontWeight="ExtraBlack"
				Foreground="#66FFFFFF"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.AlignVerticalCenterWithPanel="True"
				Text="PAUSE" />
            <Grid Background="#7FFFFFFF"
				Padding="0,4"
				RelativePanel.AlignBottomWithPanel="True"
				RelativePanel.AlignLeftWithPanel="True"
				RelativePanel.AlignRightWithPanel="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
					HorizontalAlignment="Center"
					Command="{Binding ExecCommandByLogicalID}"
					CommandParameter="previous">
                    <TextBlock FontFamily="{StaticResource FontAwesome}"
						Foreground="White"
						Text="&#xF048;" />
                </Button>
                <Button Grid.Column="1"
					HorizontalAlignment="Center"
					Command="{Binding ExecCommandByLogicalID}"
					CommandParameter="shuffle">
                    <TextBlock FontFamily="{StaticResource FontAwesome}"
						Foreground="White"
						Text="&#xF074;" />
                </Button>
                <Button Grid.Column="2"
					HorizontalAlignment="Center"
					Command="{Binding ExecCommandByLogicalID}"
					CommandParameter="repeat">
                    <TextBlock FontFamily="{StaticResource FontAwesome}"
						Foreground="White"
						Text="&#xF01E;" />
                </Button>
                <Button Grid.Column="3"
					HorizontalAlignment="Center"
					Command="{Binding ExecCommandByLogicalID}"
					CommandParameter="play">
                    <TextBlock FontFamily="{StaticResource FontAwesome}"
						Foreground="White"
						Text="&#xF04B;" />
                </Button>
                <Button Grid.Column="4"
					HorizontalAlignment="Center"
					Command="{Binding ExecCommandByLogicalID}"
					CommandParameter="stop">
                    <TextBlock FontFamily="{StaticResource FontAwesome}"
						Foreground="White"
						Text="&#xF04D;" />
                </Button>
                <Button Grid.Column="5"
					HorizontalAlignment="Center"
					Command="{Binding ExecCommandByLogicalID}"
					CommandParameter="mute">
                    <TextBlock FontFamily="{StaticResource FontAwesome}"
						Foreground="White"
						Text="&#xF026;" />
                </Button>
                <Button Grid.Column="6"
					HorizontalAlignment="Center"
					Command="{Binding ExecCommandByLogicalID}"
					CommandParameter="next">
                    <TextBlock FontFamily="{StaticResource FontAwesome}"
						Foreground="White"
						Text="&#xF051;" />
                </Button>
            </Grid>
        </RelativePanel>
    </DataTemplate>

    <!--  Template pour un equipement On Off  -->
    <DataTemplate x:Key="OnOffEqLogicTemplate">
        <RelativePanel Background="{Binding cmds, ConverterParameter=LIGHT_STATE, Converter={StaticResource GroupState2BrushConverter}}"
			Padding="4"
			d:DesignHeight="150"
			d:DesignWidth="150">
            <ProgressRing x:Name="PART_Updating"
				IsActive="True"
				RelativePanel.AlignRightWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Visibility="{Binding Updating, Converter={StaticResource UpdatingConverter}}" />
            <StackPanel x:Name="PART_Commands"
				Orientation="Horizontal"
				RelativePanel.Above="PART_Caption"
				RelativePanel.AlignHorizontalCenterWithPanel="True">
                <Button Command="{Binding ExecCommandByType}"
					CommandParameter="LIGHT_ON"
					Content="On" />
                <Button Margin="4,0,0,0"
					Command="{Binding ExecCommandByType}"
					CommandParameter="LIGHT_OFF"
					Content="Off" />
            </StackPanel>
            <TextBlock x:Name="PART_Name"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Text="{Binding name, FallbackValue=Name}" />
            <Viewbox x:Name="PART_Icon"
				Margin="4"
				RelativePanel.Above="PART_Commands"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="PART_Name">
                <TextBlock HorizontalAlignment="Center"
					FontFamily="{StaticResource FontAwesome}"
					Foreground="White"
					Text="&#xF0EB;" />
            </Viewbox>
            <TextBlock x:Name="PART_Caption"
				FontFamily="Segoe UI"
				FontSize="8"
				FontWeight="Light"
				RelativePanel.AlignBottomWithPanel="True"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				Text="{Binding eqType_name, FallbackValue=Type}" />
        </RelativePanel>
    </DataTemplate>

    <!--  Selectors  -->
    <selector:EqLogicTemplateSelector x:Key="EqLogicTemplateSelector"
		EqLogicTemplate="{StaticResource EqLogicTemplate}"
		OnOffEqLogicTemplate="{StaticResource OnOffEqLogicTemplate}"
		SonosEqLogicTemplate="{StaticResource SonosEqLogicTemplate}"
		ZWaveEqLogicTemplate="{StaticResource ZWaveEqLogicTemplate}" />
    <selector:CmdTemplateSelector x:Key="CmdTemplateSelector"
		NumericCmdTemplate="{StaticResource NumericCmdTemplate}"
		BinaryCmdTemplate="{StaticResource BinaryCmdTemplate}"
		StringCmdTemplate="{StaticResource StringCmdTemplate}"
		OtherCmdTemplate="{StaticResource OtherCmdTemplate}"
		SliderCmdTemplate="{StaticResource SliderCmdTemplate}"
		MessageCmdTemplate="{StaticResource MessageCmdTemplate}"
		ColorCmdTemplate="{StaticResource ColorCmdTemplate}"
		LIGHT_STATE_Template="{StaticResource LIGHT_STATE_Template}"
		LIGHT_ON_Template="{StaticResource LIGHT_ON_Template}"
		LIGHT_OFF_Template="{StaticResource LIGHT_OFF_Template}" />
    <DataTemplate x:Key="NumericCmdTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <TextBlock x:Name="PART_Name"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Text="{Binding name, FallbackValue=Name}" />
            <Viewbox
				Margin="4"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="PART_Name">
                <Slider HorizontalAlignment="Center"
					Foreground="White"
                    Width="150"
					Minimum="0" 
					Maximum="255" 
					Value="{Binding Value, ConverterParameter=ToDouble, Converter={StaticResource ChangeTypeConverter}}" />
            </Viewbox>
        </RelativePanel>
    </DataTemplate>
    <DataTemplate x:Key="BinaryCmdTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <TextBlock x:Name="PART_Name"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Text="{Binding name, FallbackValue=Name}" />
            <Viewbox x:Name="PART_Icon"
				Margin="4"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="PART_Name">
                <TextBlock HorizontalAlignment="Center"
					FontFamily="{StaticResource FontAwesome}"
					Foreground="White"
                    Text="{Binding Path=Value, 
                        Converter={StaticResource StateToFontAwesomeConverter},
                        UpdateSourceTrigger=Default}" />
            </Viewbox>
        </RelativePanel>
    </DataTemplate>
    <DataTemplate x:Key="StringCmdTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <TextBlock x:Name="PART_Name"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Text="{Binding name, FallbackValue=Name}" />
            <Viewbox
				Margin="4"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="PART_Name">
                <TextBlock HorizontalAlignment="Center"
					Foreground="White"
                    Width="150"
					Text="{Binding Value}" />
            </Viewbox>
        </RelativePanel>
    </DataTemplate>
    <DataTemplate x:Key="OtherCmdTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <Button  HorizontalAlignment="Center"
					Foreground="White"
                    Width="150"
					Content="{Binding name}"
                    ClickMode="Press"
                Command="{Binding ExecCommand}"/>
        </RelativePanel>
    </DataTemplate>
    <DataTemplate x:Key="SliderCmdTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <Slider HorizontalAlignment="Center"
					Foreground="White"
					Minimum="0" 
					Maximum="255" 
                    Width="150"
                    Header="{Binding name, FallbackValue=Name}"
					Value="{Binding WidgetValue.slider, Mode=TwoWay}"
                    ValueChanged="{Binding ExecCommand}"/>
        </RelativePanel>
    </DataTemplate>
    <DataTemplate x:Key="MessageCmdTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <TextBox x:Name="Title"
                Header="Title"
				HorizontalAlignment="Center"
				VerticalAlignment="Stretch"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.AlignTopWithPanel="True" 
                Width="150"
                Text="{Binding WidgetValue.title, Mode=TwoWay}"/>
            <TextBox x:Name="Message"
                Header="Message"
				HorizontalAlignment="Center"
				VerticalAlignment="Stretch"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="Title" 
                Width="150"
                Text="{Binding WidgetValue.Message, Mode=TwoWay}"/>
            <Button  
				HorizontalAlignment="Center"
				VerticalAlignment="Stretch"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.Below="Message" 
					Foreground="White"
					Content="{Binding name}"
                 ClickMode="Press"
                Command="{Binding ExecCommand}"/>
            </RelativePanel>
    </DataTemplate>
    <DataTemplate x:Key="ColorCmdTemplate">
        <RelativePanel Visibility="{Binding isVisible, Converter={StaticResource UpdatingConverter}}">
            <TextBlock x:Name="PART_Name"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				RelativePanel.AlignHorizontalCenterWithPanel="True"
				RelativePanel.AlignTopWithPanel="True"
				Text="{Binding name, FallbackValue=Name}" />
            <ColorPicker:ColorPicker 
                SelectedColorChanged="{Binding ExecCommand}" />
        </RelativePanel>
    </DataTemplate>

    <DataTemplate x:Key="LIGHT_OFF_Template"/>
    <DataTemplate x:Key="LIGHT_ON_Template"/>
    <DataTemplate x:Key="LIGHT_STATE_Template"/>
</ResourceDictionary>